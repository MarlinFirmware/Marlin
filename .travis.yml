---
language: c

before_install:
  # Travis runs a detached head. We need to find the current branch
  - git checkout `git branch --contains HEAD | grep -v '*'`
  # Also tags for the root(s) of the minor version(s)
  - git fetch origin --tags
  - mkdir ~/bin
  - wget https://bootstrap.pypa.io/get-pip.py
  - wget https://bintray.com/artifact/download/olikraus/u8glib/u8glib_arduino_v1.17.zip
install:
  - mv LinuxAddons/bin/*  ~/bin/
  - sudo python get-pip.py
  - sudo pip install ino
  # add ppa for newer version of Arduino than available in ubuntu 12.04
  - sudo add-apt-repository ppa:michael-gruz/elektronik -y
  - sudo apt-get update -q 
  - sudo apt-get install arduino
before_script:
  # copy TMC and L6470 libraries to arduino dir, as conditional includes do not work in .ino files
  - sudo cp -r ArduinoAddons/Arduino_1.x.x/libraries/ /usr/share/arduino
  # add U8glib, LiquidCrystal_I2C & LiquidTWI2 libraries 
  - sudo unzip u8glib_arduino_v1.17.zip -d /usr/share/arduino/libraries/
  - cd /usr/share/arduino/libraries/
  - sudo git clone https://github.com/kiyoshigawa/LiquidCrystal_I2C.git
  - ls -la
  - ls -la LiquidCrystal_I2C/
  - sudo git clone https://github.com/lincomatic/LiquidTWI2.git
  # remove Robot_Control library to stop compile error!
  - sudo rm -rf /usr/share/arduino/libraries/Robot_Control
  # change back to home directory for compiling
  - cd $TRAVIS_BUILD_DIR
  # ino needs files in src directory
  - ln -s Marlin src
  - generate_version_header_for_marlin . Marlin/_Version.h
  - cat Marlin/_Version.h
script:
  # build default config
  - cp Marlin/example_configurations/default/* Marlin/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # and the ramps version, without options, of the default
  - cp Marlin/example_configurations/ramps/Configuration.h Marlin/
  - cp Marlin/example_configurations/ramps/Options.h Marlin/Options.h
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 1 -- Two Extruders
  # commented out for the moment fails build but compiles fine in Arduino
  #- rm -rf .build/
  - cp Marlin/example_configurations/ramps/TestOptions1.h Marlin/Options.h
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 2 -- AZTEEG_X3_PRO with three extruders
  #- rm -rf .build/
  - cp Marlin/example_configurations/ramps/TestOptions2.h Marlin/Options.h
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -DMOTHERBOARD=BOARD_AZTEEG_X3_PRO -ffunction-sections -fdata-sections -g -Os -w"
  # Test 3 -- PID Control of Bed Temperature
  - cp Marlin/example_configurations/ramps/TestOptions3.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 4 -- Automatic Bed Leveling
  - cp Marlin/example_configurations/ramps/TestOptions4.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 5 -- EEPROM (Chatty)
  - cp Marlin/example_configurations/ramps/TestOptions5.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  ### LCDS ###
  # Test 6 -- UltiMaker Controller
  - cp Marlin/example_configurations/ramps/TestOptions6.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 7 -- Makr Panel
  # Needs to use melzi and sanguino hardware
  - cp Marlin/example_configurations/ramps/TestOptions7.h Marlin/Options.h
  #- rm -rf .build/
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 8 -- RepRap Discount Smart Controller
  - cp Marlin/example_configurations/ramps/TestOptions8.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 9 -- G-3D Pane
  - cp Marlin/example_configurations/ramps/TestOptions9.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 10 -- RepRap Discount Full Graphic Smart Controller
  - cp Marlin/example_configurations/ramps/TestOptions10.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 11 -- RepRapWorld Keypad
  # Cant find configuration details to get it to compile
  - cp Marlin/example_configurations/ramps/TestOptions11.h Marlin/Options.h
  #- rm -rf .build/
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 12 -- RA Control Panel
  - cp Marlin/example_configurations/ramps/TestOptions12.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  ### I2C PANELS ###
  # Test 13 -- Sainsmart YWRobot I2C LCD Controller
  # Failing at the moment needs different library 
  - cp Marlin/example_configurations/ramps/TestOptions13.h Marlin/Options.h
  #- rm -rf .build/
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 14 -- PanelOLU2 I2C LCD Controller
  - sed -i 's/\/\/#define LCD_I2C_PANELOLU2/#define LCD_I2C_PANELOLU2/g' Marlin/Configuration.h
  - cp Marlin/example_configurations/ramps/TestOptions14.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 15 -- Viki I2C LCD Controller
  - cp Marlin/example_configurations/ramps/TestOptions15.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 16 -- Filament Sensor without Display
  - cp Marlin/example_configurations/ramps/TestOptions16.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Test 17 -- Filament Sensor and Display
  - cp Marlin/example_configurations/ramps/TestOptions17.h Marlin/Options.h
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  ######## Example Configurations ##############
  # Delta Config (generic)
  - cp Marlin/example_configurations/delta/generic/Configuration* Marlin/
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Delta Config (Mini Kossel)
  - cp Marlin/example_configurations/delta/kossel_mini/Configuration* Marlin/
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Delta Config (Kossel Pro)
  - cp Marlin/example_configurations/delta/kossel_pro/Configuration* Marlin/
  - rm -rf .build/
  - ino build -m BrainwavePro --cppflags="-DAT90USBxx_TEENSYPP_ASSIGNMENTS -DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # Makibox Config  need to check board type for Teensy++ 2.0
  #- cp Marlin/example_configurations/makibox/Configuration* Marlin/
  #- rm -rf .build/
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # SCARA Config
  - cp Marlin/example_configurations/SCARA/Configuration* Marlin/
  - rm -rf .build/
  - ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  # tvrrug Config need to check board type for sanguino atmega644p
  #- cp Marlin/example_configurations/tvrrug/Round2/Configuration* Marlin/
  #- rm -rf .build/
  #- ino build -m mega2560 --cppflags="-DHAS_AUTOMATIC_VERSIONING -ffunction-sections -fdata-sections -g -Os -w"
  ######## Board Types #############
