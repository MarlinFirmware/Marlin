#!/usr/bin/env bash
#
# build_all_examples
#

GITREPO=https://github.com/MarlinFirmware/Configurations.git

# Check dependencies
which curl 1>/dev/null 2>&1 || { echo "curl not found! Please install it."; exit ; }
which git 1>/dev/null 2>&1 || { echo "git not found! Please install it."; exit ; }

SED=$(command -v gsed 2>/dev/null || command -v sed 2>/dev/null)
[[ -z $SED ]] && { echo "No sed found, please install sed" ; exit 1 ; }

# Check if called in the right location
if [[ ! -e "Marlin/src" ]]; then
  echo "This script must be called from a Marlin working copy with:"
  echo " ./buildroot/bin/$self $1"
  exit
fi

self=`basename "$0"`
HERE=`dirname "$0"`

if [[ $# -lt 1 || $# -gt 2 ]]; then
  echo "
  Usage: $self base_branch [resume_point]
         base_branch    Configuration branch to download and build
         resume_point   Configuration path to start from"
  exit
fi

echo "This script downloads all Configurations and builds Marlin with each one."
echo "On failure the last-built configs will be left in your working copy."
echo "Restore your configs with 'git checkout -f' or 'git reset --hard HEAD'."

# Check if the current repository has unmerged changes
if [[ -z $2 ]]; then
  git diff --quiet || { echo "Your current repository is not clean. Either commit your change or stash them, and re-run this script"; exit ; }
else
  echo "Resuming from $2"
fi

# Create a temporary folder if needed
[[ -d $MFTEMP ]] || export MFTEMP=$(mktemp -d)

# Ok, let's do our stuff now
# First extract the current temporary folder
echo "Fetching configuration repository"
if [[ ! -e "$MFTEMP/README.md" ]]; then
  git clone --depth 1 --single-branch --branch "$1" $GITREPO "$MFTEMP" || { echo "Failed to clone the configuration repository"; exit ; }
fi

echo "Temporary path used: $MFTEMP"
echo
echo "Start building now..."
echo "====================="
shopt -s nullglob
for config in $MFTEMP/config/examples/**/; do
  [[ -d $config ]] || continue
  base=`basename "$config"`
  [[ ! -z $2 ]] && [[ $2 != $base ]] && { echo "Skipping $base..." ; continue ; }
  "$HERE/build_example" "internal" "$MFTEMP" "$base" || { echo "Failed to build $base"; exit ; }
done

# Delete the temp folder
rm -rf "$MFTEMP"
unset MFTEMP
