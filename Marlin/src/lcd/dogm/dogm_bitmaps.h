/**                           
  * Marlin 3D Printer Firmware                           
  * Copyright (C) 2016 MarlinFirmware [https://github.com/MarlinFirmware/Marlin]                           
  *                            
  * Based on Sprinter and grbl.                            
  * Copyright (C) 2011 Camiel Gubbels / Erik van der Zalm                            
  *                            
  * This program is free software: you can redistribute it and/or modify                           
  * it under the terms of the GNU General Public License as published by                           
  * the Free Software Foundation, either version 3 of the License, or                            
  * (at your option) any later version.                            
  *                            
  * This program is distributed in the hope that it will be useful,                            
  * but WITHOUT ANY WARRANTY; without even the implied warranty of                           
  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                            
  * GNU General Public License for more details.                           
  *                            
  * You should have received a copy of the GNU General Public License                            
  * along with this program.  If not, see <http://www.gnu.org/licenses/>.                            
  *                            
*/                           

/**                           
  * Standard Marlin Bitmap for splashscreen                            
  *                            
  * You may use one of the following tools to generate the C++ bitmap array from                           
  * a black and white image:                           
  *                            
  *  - http://www.marlinfw.org/tools/u8glib/converter.html                           
  *  - http://www.digole.com/tools/PicturetoC_Hex_converter.php                            
  *                            
  * Please note that using the high-res version takes 402Bytes of PROGMEM.                           
*/                           

/**
 * There are two sets of bitmaps in this file.  
 *
 * The ARM ones are exact copies of the Marlin 1.x bitmaps.
 *
 * The AVR ones were created from the ARM ones by transposing each byte end 
 * for end (bits 7 & 0 swapped, bits 6 & 1 swapped, ...).
 */



//#if defined(__AVR__)
#if 1 

  
  //#define START_BMPHIGH                           
  
  #if ENABLED(SHOW_BOOTSCREEN)                            
    #if ENABLED(START_BMPHIGH)                            
      #define START_BMPWIDTH      112                           
      #define START_BMPHEIGHT      38                           
      #define START_BMPBYTEWIDTH   14                           
      #define START_BMPBYTES      532 // START_BMPWIDTH * START_BMPHEIGHT / 8                           
      
      const unsigned char start_bmp[START_BMPBYTES] = {                           
        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,   
        0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,   
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0xFF,   
        0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xFF, 0xFF,   
        0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF,   
        0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,   
        0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF,   
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0xFC, 0xFF,   
        0x03, 0xF0, 0x03, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x18, 0x00, 0xF8, 0xFF,   
        0x03, 0xFC, 0x87, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3C, 0x00, 0xF0, 0xFF,   
        0x03, 0xFE, 0xCF, 0xFF, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3C, 0x00, 0xE0, 0xFF,   
        0x03, 0xFF, 0xFF, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x3C, 0x00, 0xC0, 0xFF,   
        0x83, 0x1F, 0xFE, 0xE1, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x80, 0xFF,   
        0x83, 0x0F, 0xFC, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFF,   
        0x83, 0x07, 0x78, 0x80, 0x07, 0xF8, 0x00, 0xC0, 0x07, 0x1E, 0x3C, 0xC0, 0x0F, 0xFE,   
        0x83, 0x07, 0x78, 0x80, 0x07, 0xFE, 0x03, 0xF0, 0x1F, 0x1E, 0x3C, 0xE0, 0x3F, 0xFC,   
        0x83, 0x07, 0x78, 0x80, 0x87, 0xFF, 0x07, 0xF8, 0x3F, 0x1E, 0x3C, 0xF0, 0x7F, 0xF8,   
        0x83, 0x07, 0x78, 0x80, 0xC7, 0xFF, 0x0F, 0xFC, 0x7F, 0x1E, 0x3C, 0xF8, 0x7F, 0xF0,   
        0x83, 0x07, 0x78, 0x80, 0xC7, 0xCF, 0x1F, 0xFC, 0x7C, 0x1E, 0x3C, 0xFC, 0xFC, 0xE0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x07, 0x3F, 0x3E, 0xF8, 0x1E, 0x3C, 0x7C, 0xF8, 0xE0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x03, 0x3E, 0x3E, 0xF0, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x01, 0x3E, 0x1E, 0xF0, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x01, 0x3C, 0x1E, 0x00, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x01, 0x3C, 0x1E, 0x00, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x01, 0x3C, 0x1E, 0x00, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xE7, 0x03, 0x3C, 0x1E, 0x00, 0x1E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xC7, 0x07, 0x3C, 0x1E, 0x00, 0x3E, 0x3C, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0xC7, 0xFF, 0xFC, 0x1F, 0x00, 0xFE, 0x3D, 0x3C, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0x87, 0xFF, 0xFC, 0x1F, 0x00, 0xFC, 0xFD, 0x3F, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0x07, 0xFF, 0xFC, 0x1F, 0x00, 0xF8, 0xFD, 0x3F, 0xF0, 0xC0,   
        0x83, 0x07, 0x78, 0x80, 0x07, 0xFE, 0xFC, 0x1F, 0x00, 0xF0, 0xFD, 0x3F, 0xF0, 0xC0,   
        0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0,   
        0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,   
        0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,   
        0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,   
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,   
        0xF0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F,   
        0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01,  
      };
    #else                           
      #define START_BMPWIDTH      56                            
      #define START_BMPHEIGHT     19                            
      #define START_BMPBYTEWIDTH  7                           
      #define START_BMPBYTES      133 // START_BMPWIDTH * START_BMPHEIGHT / 8                           
      
      const unsigned char start_bmp[START_BMPBYTES] = {                           
        0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,                 
        0x06, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF,                 
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,                 
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,                 
        0xC1, 0xF3, 0x00, 0x00, 0x30, 0x0C, 0xFC,                 
        0xE1, 0xFF, 0x01, 0x00, 0x30, 0x0C, 0xF8,                 
        0x61, 0x9E, 0x01, 0x00, 0x30, 0x00, 0xF0,                 
        0x31, 0x0C, 0xE3, 0xC1, 0x31, 0x0C, 0xE7,                 
        0x31, 0x0C, 0xF3, 0xE3, 0x33, 0x8C, 0xCF,                 
        0x31, 0x0C, 0x3B, 0x37, 0x37, 0xCC, 0x9D,                 
        0x31, 0x0C, 0x1B, 0x36, 0x36, 0xCC, 0x98,                 
        0x31, 0x0C, 0x0B, 0x36, 0x30, 0xCC, 0x98,                 
        0x31, 0x0C, 0x1B, 0x36, 0x30, 0xCC, 0x98,                 
        0x31, 0x0C, 0x3B, 0x36, 0x70, 0xDC, 0x98,                 
        0x31, 0x0C, 0xF3, 0x3E, 0xE0, 0xF9, 0x98,                 
        0x31, 0x0C, 0xE3, 0x3E, 0xC0, 0xF1, 0x98,                 
        0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40,                 
        0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60,                 
        0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x1F,     
      };              
    #endif                            
  #endif                            
  
  // Here comes a compile-time operation to match the extruder symbols                            
  // on the info screen to the set number of extruders in configuration.h                           
  //                            
  // When only one extruder is selected the "1" on the symbol will not                          
  // be displayed.                            
  
  #if HAS_TEMP_BED                            
    #if HOTENDS == 1                            
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0xFA, 0xF0, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0xF2, 0xF0, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0x02, 0x06, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
    #elif HOTENDS == 2                            
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x7A, 0xE0, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0xFA, 0xF0, 0x05, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0xF2, 0xF0, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x1A, 0x80, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x00, 0x00, 0x80, 0x20, 0x08, 0x00, 0x02, 0x0F, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x41, 0x10, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x82, 0x20, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
    #else                           
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0xFC, 0x03, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x04, 0x41, 0x00, 0x02, 0x0F, 0x04, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x7E, 0x07, 0x00, 0x82, 0x20, 0x00, 0x02, 0x06, 0x04, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x9C, 0x03, 0x00, 0x41, 0x10, 0x00, 0x7A, 0xE0, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x7C, 0x03, 0x80, 0x20, 0x08, 0x00, 0xFA, 0xF0, 0x05, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x6E, 0x07, 0x80, 0x20, 0x08, 0x00, 0xF2, 0xF0, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x41, 0x10, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x82, 0x20, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0xFC, 0x03, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x04, 0x41, 0x00, 0x7A, 0xEF, 0x05, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x7E, 0x07, 0x00, 0x82, 0x20, 0x00, 0x3A, 0xC6, 0x05, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x9C, 0x03, 0x00, 0x41, 0x10, 0x00, 0x1A, 0x80, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x7C, 0x03, 0x80, 0x20, 0x08, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x6E, 0x07, 0x80, 0x20, 0x08, 0x00, 0x02, 0x0F, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x41, 0x10, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x82, 0x20, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x80, 0xFF, 0xFF, 0x01, 0x00, 0x00, 0x00,   
      };
      
    #endif // Extruders                           
  #else                           
    #if HOTENDS == 1                            
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
    #elif HOTENDS == 2                            
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
    #else                           
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen0_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xE0, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x7C, 0x03, 0x00, 0x00, 0x00, 0x00, 0xFA, 0xF0, 0x05, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0xF2, 0xF0, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x70, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x30, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels                            
      #define STATUS_SCREENHEIGHT     19 //Height in pixels                           
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes                           
      const unsigned char status_screen1_bmp[] = { //AVR-GCC  WinAVR                          
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xFE, 0x01, 0x00, 0xFC, 0x03, 0x00, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xDF, 0x03, 0x00, 0x9E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xCF, 0x03, 0x00, 0x6E, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x7A, 0xEF, 0x05, 
        0xD7, 0x03, 0x00, 0x7E, 0x07, 0x00, 0x7E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x3A, 0xC6, 0x05, 
        0xDE, 0x01, 0x00, 0xBC, 0x03, 0x00, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x05, 
        0xDE, 0x01, 0x00, 0xDC, 0x03, 0x00, 0x7C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x02, 0x06, 0x04, 
        0xDF, 0x03, 0x00, 0xEE, 0x07, 0x00, 0x6E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x02, 0x0F, 0x04, 
        0xDF, 0x03, 0x00, 0x0E, 0x07, 0x00, 0x9E, 0x07, 0x00, 0x00, 0x00, 0x00, 0x82, 0x1F, 0x04, 
        0xFF, 0x03, 0x00, 0xFE, 0x07, 0x00, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x86, 0x1F, 0x06, 
        0xFC, 0x00, 0x00, 0xF8, 0x01, 0x00, 0xF8, 0x01, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x07, 
        0x78, 0x00, 0x00, 0xF0, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x07, 
        0x30, 0x00, 0x00, 0x60, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,   
      };
      
    #endif // Extruders                           
    
    #if ENABLED(BABYSTEP_ZPROBE_GFX_OVERLAY)                            
      const unsigned char cw_bmp[] = { //AVR-GCC  WinAVR                          
        0xE0, 0x1F, 0x00,     // 000001111111100000000000                   
        0x30, 0x30, 0x00,     // 000011000000110000000000                   
        0x08, 0x40, 0x00,     // 000100000000001000000000                   
        0x04, 0x80, 0x00,     // 001000000000000100000000                   
        0x06, 0x80, 0x01,     // 011000000000000100000000                   
        0x02, 0x00, 0x01,     // 010000000000000010000000                   
        0x02, 0xC0, 0x07,     // 010000000000001111100000                   
        0x02, 0x80, 0x03,     // 010000000000000111000000                   
        0x02, 0x00, 0x01,     // 010000000000000010000000                   
        0x02, 0x00, 0x00,     // 010000000000000000000000                   
        0x02, 0x00, 0x00,     // 010000000000000000000000                   
        0x06, 0x00, 0x00,     // 011000000000000000000000                   
        0x04, 0x00, 0x00,     // 001000000000000000000000                   
        0x08, 0x00, 0x00,     // 000100000000000000000000                   
        0x30, 0x30, 0x00,     // 000011000000110000000000                   
        0xE0, 0x1F, 0x00,     // 000001111111100000000000     
      };                
      
      
      const unsigned char ccw_bmp[] = { //AVR-GCC   WinAVR                        
        0x80, 0x7F, 0x00,     // 000000011111111000000000                   
        0xC0, 0xC0, 0x00,     // 000000110000001100000000                   
        0x20, 0x00, 0x01,     // 000001000000000010000000                   
        0x10, 0x00, 0x02,     // 000010000000000001000000                   
        0x18, 0x00, 0x06,     // 000110000000000001100000                   
        0x08, 0x00, 0x04,     // 000100000000000000100000                   
        0x3E, 0x00, 0x04,     // 011111000000000000100000                   
        0x1C, 0x00, 0x04,     // 001110000000000000100000                   
        0x08, 0x00, 0x04,     // 000100000000000000100000                   
        0x00, 0x00, 0x04,     // 000000000000000000100000                   
        0x00, 0x00, 0x04,     // 000000000000000000100000                   
        0x00, 0x00, 0x06,     // 000000000000000001100000                   
        0x00, 0x00, 0x02,     // 000000000000000001000000                   
        0x00, 0x00, 0x01,     // 000000000000000010000000                   
        0xC0, 0xC0, 0x00,     // 000000110000001100000000                   
        0x80, 0x7F, 0x00,     // 000000011111111000000000      
      };               
      
      
      
      const unsigned char up_arrow_bmp[] = { //AVR-GCC    WinAVR                        
        0x60, 0x00,     // 000001100000                     
        0xF0, 0x00,     // 000011110000                     
        0xF8, 0x01,     // 000111111000                     
        0xFC, 0x03,     // 001111111100                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000       
      };                
      
      
      const unsigned char down_arrow_bmp[] = { //AVR-GCC    WinAVR                        
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0x60, 0x00,     // 000001100000                     
        0xFC, 0x03,     // 001111111100                     
        0xF8, 0x01,     // 000111111000                     
        0xF0, 0x00,     // 000011110000                     
        0x60, 0x00,     // 000001100000       
      };                
      
      
      const unsigned char offset_bedline_bmp[] = { //AVR-GCC    WinAVR                        
        0xFF, 0xFF, 0xFF,   // 111111111111111111111111       
      };                
      
      
      const unsigned char nozzle_bmp[] = { //AVR-GCC    WinAVR                        
        0xFE, 0x01,     // 0111111110000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFE, 0x01,     // 0111111110000000                     
        0xFE, 0x01,     // 0111111110000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFF, 0x03,     // 1111111111000000                     
        0xFC, 0x00,     // 0011111100000000                     
        0x78, 0x00,     // 0001111000000000                     
        0x30, 0x00,     // 0000110000000000        
      };               
      
    #endif // BABYSTEP_ZPROBE_GFX_OVERLAY                           
    
  #endif // HAS_TEMP_BED                            
  
  
#elif defined(__arm__)
  
  //#define START_BMPHIGH
  
  #if ENABLED(SHOW_BOOTSCREEN)
    #if ENABLED(START_BMPHIGH)
      #define START_BMPWIDTH      112
      #define START_BMPHEIGHT      38
      #define START_BMPBYTEWIDTH   14
      #define START_BMPBYTES      532 // START_BMPWIDTH * START_BMPHEIGHT / 8
      
      const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
        0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF,
        0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
        0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
        0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x3F, 0xFF,
        0xC0, 0x0F, 0xC0, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x18, 0x00, 0x1F, 0xFF,
        0xC0, 0x3F, 0xE1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x0F, 0xFF,
        0xC0, 0x7F, 0xF3, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x07, 0xFF,
        0xC0, 0xFF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0x00, 0x03, 0xFF,
        0xC1, 0xF8, 0x7F, 0x87, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x01, 0xFF,
        0xC1, 0xF0, 0x3F, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0xFF,
        0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x1F, 0x00, 0x03, 0xE0, 0x78, 0x3C, 0x03, 0xF0, 0x7F,
        0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0xC0, 0x0F, 0xF8, 0x78, 0x3C, 0x07, 0xFC, 0x3F,
        0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0xE0, 0x1F, 0xFC, 0x78, 0x3C, 0x0F, 0xFE, 0x1F,
        0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0xF0, 0x3F, 0xFE, 0x78, 0x3C, 0x1F, 0xFE, 0x0F,
        0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xF3, 0xF8, 0x3F, 0x3E, 0x78, 0x3C, 0x3F, 0x3F, 0x07,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xE0, 0xFC, 0x7C, 0x1F, 0x78, 0x3C, 0x3E, 0x1F, 0x07,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x7C, 0x7C, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x7C, 0x78, 0x0F, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0x80, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE7, 0xC0, 0x3C, 0x78, 0x00, 0x78, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xE0, 0x3C, 0x78, 0x00, 0x7C, 0x3C, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE3, 0xFF, 0x3F, 0xF8, 0x00, 0x7F, 0xBC, 0x3C, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE1, 0xFF, 0x3F, 0xF8, 0x00, 0x3F, 0xBF, 0xFC, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0xFF, 0x3F, 0xF8, 0x00, 0x1F, 0xBF, 0xFC, 0x0F, 0x03,
        0xC1, 0xE0, 0x1E, 0x01, 0xE0, 0x7F, 0x3F, 0xF8, 0x00, 0x0F, 0xBF, 0xFC, 0x0F, 0x03,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
        0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
        0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78,
        0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
      0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80 };
    #else
      #define START_BMPWIDTH      56
      #define START_BMPHEIGHT     19
      #define START_BMPBYTEWIDTH  7
      #define START_BMPBYTES      133 // START_BMPWIDTH * START_BMPHEIGHT / 8
      
      const unsigned char start_bmp[START_BMPBYTES] PROGMEM = {
        0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
        0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
        0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
        0x83, 0xCF, 0x00, 0x00, 0x0C, 0x30, 0x3F,
        0x87, 0xFF, 0x80, 0x00, 0x0C, 0x30, 0x1F,
        0x86, 0x79, 0x80, 0x00, 0x0C, 0x00, 0x0F,
        0x8C, 0x30, 0xC7, 0x83, 0x8C, 0x30, 0xE7,
        0x8C, 0x30, 0xCF, 0xC7, 0xCC, 0x31, 0xF3,
        0x8C, 0x30, 0xDC, 0xEC, 0xEC, 0x33, 0xB9,
        0x8C, 0x30, 0xD8, 0x6C, 0x6C, 0x33, 0x19,
        0x8C, 0x30, 0xD0, 0x6C, 0x0C, 0x33, 0x19,
        0x8C, 0x30, 0xD8, 0x6C, 0x0C, 0x33, 0x19,
        0x8C, 0x30, 0xDC, 0x6C, 0x0E, 0x3B, 0x19,
        0x8C, 0x30, 0xCF, 0x7C, 0x07, 0x9F, 0x19,
        0x8C, 0x30, 0xC7, 0x7C, 0x03, 0x8F, 0x19,
        0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
      0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8 };
    #endif
  #endif
  
  // Here comes a compile-time operation to match the extruder symbols
  // on the info screen to the set number of extruders in configuration.h
  //
  // When only one extruder is selected, the "1" on the symbol will not
  // be displayed.
  
  #if HAS_TEMP_BED
    #if HOTENDS == 1
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
    #elif HOTENDS == 2
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
    #else
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x40, 0xF0, 0x20,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x40, 0x60, 0x20,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x82, 0x08, 0x00, 0x5E, 0x07, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x01, 0x04, 0x10, 0x00, 0x5F, 0x0F, 0xA0,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x01, 0x04, 0x10, 0x00, 0x4F, 0x0F, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x82, 0x08, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x20, 0x82, 0x00, 0x5E, 0xF7, 0xA0,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x5C, 0x63, 0xA0,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x82, 0x08, 0x00, 0x58, 0x01, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x01, 0x04, 0x10, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x01, 0x04, 0x10, 0x00, 0x40, 0xF0, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x82, 0x08, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x41, 0x04, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00
      };
    #endif // Extruders
  #else
    #if HOTENDS == 1
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
    #elif HOTENDS == 2
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
    #else
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
      
      #define STATUS_SCREENWIDTH     115 //Width in pixels
      #define STATUS_SCREENHEIGHT     19 //Height in pixels
      #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
      const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
        0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
        0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
        0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
        0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
        0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
        0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
        0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
        0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
        0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
      };
    #endif // Extruders
    
    #if ENABLED(BABYSTEP_ZPROBE_GFX_OVERLAY)
      const unsigned char cw_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x07,0xf8,0x00, // 000001111111100000000000
        0x0c,0x0c,0x00, // 000011000000110000000000
        0x10,0x02,0x00, // 000100000000001000000000
        0x20,0x01,0x00, // 001000000000000100000000
        0x60,0x01,0x80, // 011000000000000100000000
        0x40,0x00,0x80, // 010000000000000010000000
        0x40,0x03,0xe0, // 010000000000001111100000
        0x40,0x01,0xc0, // 010000000000000111000000
        0x40,0x00,0x80, // 010000000000000010000000
        0x40,0x00,0x00, // 010000000000000000000000
        0x40,0x00,0x00, // 010000000000000000000000
        0x60,0x00,0x00, // 011000000000000000000000
        0x20,0x00,0x00, // 001000000000000000000000
        0x10,0x00,0x00, // 000100000000000000000000
        0x0c,0x0c,0x00, // 000011000000110000000000
        0x07,0xf8,0x00  // 000001111111100000000000
      };
      
      const unsigned char ccw_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x01,0xfe,0x00, // 000000011111111000000000
        0x03,0x03,0x00, // 000000110000001100000000
        0x04,0x00,0x80, // 000001000000000010000000
        0x08,0x00,0x40, // 000010000000000001000000
        0x18,0x00,0x60, // 000110000000000001100000
        0x10,0x00,0x20, // 000100000000000000100000
        0x7c,0x00,0x20, // 011111000000000000100000
        0x38,0x00,0x20, // 001110000000000000100000
        0x10,0x00,0x20, // 000100000000000000100000
        0x00,0x00,0x20, // 000000000000000000100000
        0x00,0x00,0x20, // 000000000000000000100000
        0x00,0x00,0x60, // 000000000000000001100000
        0x00,0x00,0x40, // 000000000000000001000000
        0x00,0x00,0x80, // 000000000000000010000000
        0x03,0x03,0x00, // 000000110000001100000000
        0x01,0xfe,0x00  // 000000011111111000000000
      };
      
      
      const unsigned char up_arrow_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x06,0x00, // 000001100000
        0x0F,0x00, // 000011110000
        0x1F,0x80, // 000111111000
        0x3F,0xC0, // 001111111100
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00  // 000001100000
      };
      
      const unsigned char down_arrow_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x06,0x00, // 000001100000
        0x3F,0xC0, // 001111111100
        0x1F,0x80, // 000111111000
        0x0F,0x00, // 000011110000
        0x06,0x00  // 000001100000
      };
      
      const unsigned char offset_bedline_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0xFF,0xFF,0xFF // 111111111111111111111111
      };
      
      const unsigned char nozzle_bmp[] PROGMEM = { //AVR-GCC, WinAVR
        0x7F,0x80, // 0111111110000000
        0xFF,0xC0, // 1111111111000000
        0xFF,0xC0, // 1111111111000000
        0xFF,0xC0, // 1111111111000000
        0x7F,0x80, // 0111111110000000
        0x7F,0x80, // 0111111110000000
        0xFF,0xC0, // 1111111111000000
        0xFF,0xC0, // 1111111111000000
        0xFF,0xC0, // 1111111111000000
        0x3F,0x00, // 0011111100000000
        0x1E,0x00, // 0001111000000000
        0x0C,0x00  // 0000110000000000
      };
    #endif // BABYSTEP_ZPROBE_GFX_OVERLAY
    
  #endif // HAS_TEMP_BED
  
#else

  #if HOTENDS == 1
    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
  #elif HOTENDS == 2
    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
  #else
    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen0_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0x07, 0xA0,
      0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5F, 0x0F, 0xA0,
      0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x4F, 0x0F, 0x20,
      0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x47, 0x0E, 0x20,
      0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x63, 0x0C, 0x60,
      0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };

    #define STATUS_SCREENWIDTH     115 //Width in pixels
    #define STATUS_SCREENHEIGHT     19 //Height in pixels
    #define STATUS_SCREENBYTEWIDTH  15 //Width in bytes
    const unsigned char status_screen1_bmp[] PROGMEM = { //AVR-GCC, WinAVR
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7F, 0x80, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0xFB, 0xC0, 0x00, 0x79, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xF3, 0xC0, 0x00, 0x76, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5E, 0xF7, 0xA0,
      0xEB, 0xC0, 0x00, 0x7E, 0xE0, 0x00, 0x7E, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x63, 0xA0,
      0x7B, 0x80, 0x00, 0x3D, 0xC0, 0x00, 0x39, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x58, 0x01, 0xA0,
      0x7B, 0x80, 0x00, 0x3B, 0xC0, 0x00, 0x3E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x40, 0x60, 0x20,
      0xFB, 0xC0, 0x00, 0x77, 0xE0, 0x00, 0x76, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x40, 0xF0, 0x20,
      0xFB, 0xC0, 0x00, 0x70, 0xE0, 0x00, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x41, 0xF8, 0x20,
      0xFF, 0xC0, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x61, 0xF8, 0x60,
      0x3F, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xE0,
      0x1E, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
      0x0C, 0x00, 0x00, 0x06, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
    };
  #endif // Extruders
#endif // HAS_TEMP_BED
#if ENABLED(BABYSTEP_ZPROBE_GFX_OVERLAY) || ENABLED(ENABLE_MESH_EDIT_GFX_OVERLAY)
  const unsigned char cw_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x07,0xf8,0x00, // 000001111111100000000000
    0x0c,0x0c,0x00, // 000011000000110000000000
    0x10,0x02,0x00, // 000100000000001000000000
    0x20,0x01,0x00, // 001000000000000100000000
    0x60,0x01,0x80, // 011000000000000100000000
    0x40,0x00,0x80, // 010000000000000010000000
    0x40,0x03,0xe0, // 010000000000001111100000
    0x40,0x01,0xc0, // 010000000000000111000000
    0x40,0x00,0x80, // 010000000000000010000000
    0x40,0x00,0x00, // 010000000000000000000000
    0x40,0x00,0x00, // 010000000000000000000000
    0x60,0x00,0x00, // 011000000000000000000000
    0x20,0x00,0x00, // 001000000000000000000000
    0x10,0x00,0x00, // 000100000000000000000000
    0x0c,0x0c,0x00, // 000011000000110000000000
    0x07,0xf8,0x00  // 000001111111100000000000
  };

  const unsigned char ccw_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x01,0xfe,0x00, // 000000011111111000000000
    0x03,0x03,0x00, // 000000110000001100000000
    0x04,0x00,0x80, // 000001000000000010000000
    0x08,0x00,0x40, // 000010000000000001000000
    0x18,0x00,0x60, // 000110000000000001100000
    0x10,0x00,0x20, // 000100000000000000100000
    0x7c,0x00,0x20, // 011111000000000000100000
    0x38,0x00,0x20, // 001110000000000000100000
    0x10,0x00,0x20, // 000100000000000000100000
    0x00,0x00,0x20, // 000000000000000000100000
    0x00,0x00,0x20, // 000000000000000000100000
    0x00,0x00,0x60, // 000000000000000001100000
    0x00,0x00,0x40, // 000000000000000001000000
    0x00,0x00,0x80, // 000000000000000010000000
    0x03,0x03,0x00, // 000000110000001100000000
    0x01,0xfe,0x00  // 000000011111111000000000
  };


  const unsigned char up_arrow_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x06,0x00, // 000001100000
    0x0F,0x00, // 000011110000
    0x1F,0x80, // 000111111000
    0x3F,0xC0, // 001111111100
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00  // 000001100000
  };

  const unsigned char down_arrow_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x06,0x00, // 000001100000
    0x3F,0xC0, // 001111111100
    0x1F,0x80, // 000111111000
    0x0F,0x00, // 000011110000
    0x06,0x00  // 000001100000
  };

  const unsigned char offset_bedline_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0xFF,0xFF,0xFF // 111111111111111111111111
  };

  const unsigned char nozzle_bmp[] PROGMEM = { //AVR-GCC, WinAVR
    0x7F,0x80, // 0111111110000000
    0xFF,0xC0, // 1111111111000000
    0xFF,0xC0, // 1111111111000000
    0xFF,0xC0, // 1111111111000000
    0x7F,0x80, // 0111111110000000
    0x7F,0x80, // 0111111110000000
    0xFF,0xC0, // 1111111111000000
    0xFF,0xC0, // 1111111111000000
    0xFF,0xC0, // 1111111111000000
    0x3F,0x00, // 0011111100000000
    0x1E,0x00, // 0001111000000000
    0x0C,0x00  // 0000110000000000
  };
#endif // BABYSTEP_ZPROBE_GFX_OVERLAY || ENABLE_MESH_EDIT_GFX_OVERLAY


